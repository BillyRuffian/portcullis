# Name of your application. Used to uniquely configure containers.
service: portcullis

# Name of the container image.
image: nrbrookes/portcullis

# Deploy to these servers.
servers:
  web:
    hosts:
      - 95.217.128.48
    options: 
      "add-host": host.docker.internal:host-gateway

  job:
    hosts: 
      - 95.217.128.48
    options: 
      "add-host": host.docker.internal:host-gateway
    cmd: "bundle exec sidekiq"

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: nrbrookes

  # Always use an access token rather than real password when possible.
  password:
    - MRSK_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
env:
  clear:
    DB_HOST: 95.217.1.177
    REDIS_URL: "redis://host.docker.internal:36379/0"
    # RAILS_LOG_TO_STDOUT: "true"
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD

# Use a different ssh user than root
# ssh:
#   user: app

builder:
  multiarch: false

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:15.4
    host: 95.217.1.177
    port: 5432
    env:
      clear:
        POSTGRES_USER: 'postgres'
        POSTGRES_DB: 'portcullis_production'
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    roles:
      - web
    port: "36379:6379"
    volumes:
      - /var/lib/redis:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000
