=begin
#Members API

#An API which retrieves Members data.

The version of the OpenAPI document: v1
Contact: softwareengineering@parliament.uk
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.6.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ParliamentMembers::MembersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'MembersApi' do
  before do
    # run before each test
    @api_instance = ParliamentMembers::MembersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MembersApi' do
    it 'should create an instance of MembersApi' do
      expect(@api_instance).to be_instance_of(ParliamentMembers::MembersApi)
    end
  end

  # unit tests for api_members_history_get
  # Return members by ID with list of their historical names, parties and memberships
  # @param [Hash] opts the optional parameters
  # @option opts [Array<Integer>] :ids List of MemberIds to find
  # @return [Array<MemberHistoryItem>]
  describe 'api_members_history_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_biography_get
  # Return biography of member by ID
  # @param id Biography of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @return [MemberBiographyItem]
  describe 'api_members_id_biography_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_contact_get
  # Return list of contact details of member by ID
  # @param id Contact details of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @return [ContactInformationListItem]
  describe 'api_members_id_contact_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_contribution_summary_get
  # Return contribution summary of member by ID
  # @param id Contribution summary of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @return [DebateContributionMembersServiceSearchResult]
  describe 'api_members_id_contribution_summary_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_edms_get
  # Return list of early day motions of member by ID
  # @param id Early day motions of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @return [EarlyDayMotionMembersServiceSearchResult]
  describe 'api_members_id_edms_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_experience_get
  # Return experience of member by ID
  # @param id Experience of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @return [BiographyExperienceListItem]
  describe 'api_members_id_experience_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_focus_get
  # Return list of areas of focus of member by ID
  # @param id Areas of focus of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @return [MemberFocusListItem]
  describe 'api_members_id_focus_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_get
  # Return member by ID
  # @param id Member by ID specified
  # @param [Hash] opts the optional parameters
  # @option opts [Time] :details_for_date Member object will be populated with details from the date specified
  # @return [MemberItem]
  describe 'api_members_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_latest_election_result_get
  # Return latest election result of member by ID
  # @param id Latest election result of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @return [ElectionResultItem]
  describe 'api_members_id_latest_election_result_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_portrait_get
  # Return portrait of member by ID
  # @param id Portrait of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @option opts [PortraitCropEnum] :crop_type 
  # @option opts [Boolean] :web_version 
  # @return [nil]
  describe 'api_members_id_portrait_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_portrait_url_get
  # Return portrait url of member by ID
  # @param id Portrait url of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @return [StringItem]
  describe 'api_members_id_portrait_url_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_registered_interests_get
  # Return list of registered interests of member by ID
  # @param id Registered interests of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @option opts [House] :house Registered interests of Member by House specified
  # @return [RegisteredInterestCategoryListItem]
  describe 'api_members_id_registered_interests_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_staff_get
  # Return list of staff of member by ID
  # @param id Staff of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @return [StaffListItem]
  describe 'api_members_id_staff_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_synopsis_get
  # Return synopsis of member by ID
  # @param id Synopsis of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @return [StringItem]
  describe 'api_members_id_synopsis_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_thumbnail_get
  # Return thumbnail of member by ID
  # @param id Thumbnail of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_members_id_thumbnail_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_thumbnail_url_get
  # Return thumbnail url of member by ID
  # @param id Thumbnail url of Member by ID specified
  # @param [Hash] opts the optional parameters
  # @return [StringItem]
  describe 'api_members_id_thumbnail_url_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_voting_get
  # Return list of votes by member by ID
  # @param id Votes by Member by ID specified
  # @param house 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @return [VoteMembersServiceSearchResult]
  describe 'api_members_id_voting_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_id_written_questions_get
  # Return list of written questions by member by ID
  # @param id Written questions by Member by ID specified
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @return [WrittenQuestionMembersServiceSearchResult]
  describe 'api_members_id_written_questions_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_search_get
  # Returns a list of current members of the Commons or Lords
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Members where name contains term specified
  # @option opts [String] :location Members where postcode or geographical location matches the term specified
  # @option opts [String] :post_title Members which have held the post specified
  # @option opts [Integer] :party_id Members which are currently affiliated with party with party ID
  # @option opts [House] :house Members where their most recent house is the house specified
  # @option opts [Integer] :constituency_id Members which currently hold the constituency with constituency id
  # @option opts [String] :name_starts_with Members with surname begining with letter(s) specified
  # @option opts [String] :gender Members with the gender specified
  # @option opts [Time] :membership_started_since Members who started on or after the date given
  # @option opts [Time] :membership_ended_membership_ended_since Members who left the House on or after the date given
  # @option opts [Array<Integer>] :membership_ended_membership_end_reason_ids 
  # @option opts [Time] :membership_in_date_range_was_member_on_or_after Members who were active on or after the date specified
  # @option opts [Time] :membership_in_date_range_was_member_on_or_before Members who were active on or before the date specified
  # @option opts [House] :membership_in_date_range_was_member_of_house Members who were active in the house specifid
  # @option opts [Boolean] :is_eligible Members currently Eligible to sit in their House
  # @option opts [Boolean] :is_current_member Members who are current or former members
  # @option opts [Integer] :policy_interest_id Members with specified policy interest
  # @option opts [String] :experience Members with specified experience
  # @option opts [Integer] :skip The number of records to skip from the first, default is 0
  # @option opts [Integer] :take The number of records to return, default is 20. Maximum is 20
  # @return [MemberMembersServiceSearchResult]
  describe 'api_members_search_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for api_members_search_historical_get
  # Returns a list of members of the Commons or Lords
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Members with names containing the term specified
  # @option opts [Time] :date_to_search_for Members that were an active member of the Commons or Lords on the date specified
  # @option opts [Integer] :skip The number of records to skip from the first, default is 0
  # @option opts [Integer] :take The number of records to return, default is 20. Maximum is 20
  # @return [MemberMembersServiceSearchResult]
  describe 'api_members_search_historical_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
